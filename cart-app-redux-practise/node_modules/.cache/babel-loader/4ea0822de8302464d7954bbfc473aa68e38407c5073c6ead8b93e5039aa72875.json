{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cart = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.cartItems.push(action.payload);\n    },\n    removeItem(state, action) {\n      state.cartItems.filter(eachItem => eachItem.id === action.payload);\n    }\n  }\n});\nexport default cart;\nexport const cartActions = cart.actions;","map":{"version":3,"names":["createSlice","initialState","items","totalQuantity","cart","name","reducers","addItem","state","action","cartItems","push","payload","removeItem","filter","eachItem","id","cartActions","actions"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/cart-app-redux-practise/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { items: [], totalQuantity:0,};\nconst cart = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.cartItems.push(action.payload);\n    },\n    removeItem(state, action) {\n      state.cartItems.filter((eachItem) => eachItem.id === action.payload);\n    },\n  },\n});\n\nexport default cart;\nexport const cartActions = cart.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,EAAE;EAAEC,aAAa,EAAC;AAAE,CAAC;AACnD,MAAMC,IAAI,GAAGJ,WAAW,CAAC;EACvBK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrBD,KAAK,CAACE,SAAS,CAACC,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;IACtC,CAAC;IACDC,UAAUA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACE,SAAS,CAACI,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKP,MAAM,CAACG,OAAO,CAAC;IACtE;EACF;AACF,CAAC,CAAC;AAEF,eAAeR,IAAI;AACnB,OAAO,MAAMa,WAAW,GAAGb,IAAI,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}