{"ast":null,"code":"var _jsxFileName = \"/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { EventItem } from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    eid\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"EventDetailPage EId is \", eid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventItem, {\n      event: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"ExNqKYvGGblccoB72uyEs0lT2Jw=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport async function eachEventLoader({\n  request,\n  params\n}) {\n  console.log(\"REQ is \", request);\n  console.log(\"Param is \", params);\n  const response = await fetch(`http://localhost:8080/events/${params.eid}`);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Custom Response\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport default EventDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useParams","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","eid","children","fileName","_jsxFileName","lineNumber","columnNumber","event","_c","eachEventLoader","request","params","console","log","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","events","$RefreshReg$"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/EventDetailPage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { EventItem } from \"../components/EventItem\";\nconst EventDetailPage = () => {\n  const { eid } = useParams();\n  return (\n    <>\n      <h1>EventDetailPage EId is {eid}</h1>\n      <EventItem event/>\n    </>\n  );\n};\n\nexport async function eachEventLoader({ request, params }) {\n  console.log(\"REQ is \", request);\n  console.log(\"Param is \", params);\n  const response = await fetch(`http://localhost:8080/events/${params.eid}`);\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"Custom Response\" }), {\n      status: 500,\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport default EventDetailPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACpD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAI,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC3B,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA;MAAAM,QAAA,GAAI,yBAAuB,EAACD,GAAG;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrCV,OAAA,CAACF,SAAS;MAACa,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAClB,CAAC;AAEP,CAAC;AAACN,EAAA,CARID,eAAe;EAAA,QACHN,SAAS;AAAA;AAAAe,EAAA,GADrBT,eAAe;AAUrB,OAAO,eAAeU,eAAeA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACzDC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,OAAO,CAAC;EAC/BE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,MAAM,CAAC;EAChC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCJ,MAAM,CAACV,GAAG,EAAE,CAAC;EAE1E,IAAI,CAACa,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAkB,CAAC,CAAC,EAAE;MACjEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACE,MAAM;EACvB;AACF;AAEA,eAAezB,eAAe;AAAC,IAAAS,EAAA;AAAAiB,YAAA,CAAAjB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}