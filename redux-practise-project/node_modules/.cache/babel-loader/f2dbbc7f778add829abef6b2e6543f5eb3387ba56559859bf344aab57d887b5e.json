{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  toggle: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n    decrement(state, action) {\n      state.counter--;\n    },\n    toggle(state, action) {\n      state.toggle = !state.toggle;\n    }\n  }\n});\ncrea;\n\n// const reuducerFunc = (state = initialState, action) => {\n//   if (action.type === \"INC\") {\n//     return { counter: state.counter + 1, toggle: state.toggle };\n//   } else if (action.type === \"DEC\") {\n//     return { counter: state.counter - 1, toggle: state.toggle };\n//   } else if (action.type === \"TOG\") {\n//     return { counter: state.counter, toggle: !state.toggle };\n//   } else {\n//     return state;\n//   }\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","toggle","counterSlice","name","reducers","increment","state","action","decrement","crea","store","reducer","counterActions","actions"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/redux-practise-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, toggle: true };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n    decrement(state, action) {\n      state.counter--;\n    },\n    toggle(state, action) {\n      state.toggle = !state.toggle;\n    },\n  },\n});\n\n\n\ncrea\n\n// const reuducerFunc = (state = initialState, action) => {\n//   if (action.type === \"INC\") {\n//     return { counter: state.counter + 1, toggle: state.toggle };\n//   } else if (action.type === \"DEC\") {\n//     return { counter: state.counter - 1, toggle: state.toggle };\n//   } else if (action.type === \"TOG\") {\n//     return { counter: state.counter, toggle: !state.toggle };\n//   } else {\n//     return state;\n//   }\n// };\n\nconst store = configureStore({ reducer: counterSlice.reducer });\nexport const counterActions = counterSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,MAAM,EAAE;AAAK,CAAC;AAEjD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,SAASA,CAACF,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDC,MAAMA,CAACK,KAAK,EAAEC,MAAM,EAAE;MACpBD,KAAK,CAACL,MAAM,GAAG,CAACK,KAAK,CAACL,MAAM;IAC9B;EACF;AACF,CAAC,CAAC;AAIFQ,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGZ,cAAc,CAAC;EAAEa,OAAO,EAAET,YAAY,CAACS;AAAQ,CAAC,CAAC;AAC/D,OAAO,MAAMC,cAAc,GAAGV,YAAY,CAACW,OAAO;AAClD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}