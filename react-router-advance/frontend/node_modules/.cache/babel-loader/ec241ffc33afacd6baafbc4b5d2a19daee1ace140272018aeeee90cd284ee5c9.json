{"ast":null,"code":"var _jsxFileName = \"/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/App.js\";\n// Challenge / Exercise\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/RootLayout\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage, { eventsLoader } from \"./pages/EventsPage\";\nimport EventDetailPage, { eachEventLoader } from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport RootEventLayout from \"./pages/RootEventLayout\";\nimport Error from \"./pages/Error\";\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(RootEventLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this),\n    children: [{\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":eid\",\n      loader: async ({\n        request,\n        params\n      }) => {\n        console.log(\"REQ is \", request);\n        console.log(\"Param is \", params);\n        const response = await fetch(`http://localhost:8080/events/${params.eid}`);\n        if (!response.ok) {\n          throw new Response(JSON.stringify({\n            message: \"Custom Response\"\n          }), {\n            status: 500\n          });\n        } else {\n          const resData = await response.json();\n          return resData.event;\n        }\n      },\n      children: [{\n        path: \"\",\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 26\n        }, this)\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 40\n        }, this)\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 35\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","RootLayout","HomePage","EventsPage","eventsLoader","EventDetailPage","eachEventLoader","NewEventPage","EditEventPage","RootEventLayout","Error","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","errorElement","loader","request","params","console","log","response","fetch","eid","ok","Response","JSON","stringify","message","status","resData","json","event","App","_c","$RefreshReg$"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/RootLayout\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage, { eventsLoader } from \"./pages/EventsPage\";\nimport EventDetailPage, { eachEventLoader } from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport RootEventLayout from \"./pages/RootEventLayout\";\nimport Error from \"./pages/Error\";\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    children: [\n      {\n        path: \"\",\n        element: <HomePage />,\n      },\n      {\n        path: \"events\",\n        element: <RootEventLayout />,\n        errorElement: <Error />,\n        children: [\n          {\n            path: \"\",\n            element: <EventsPage />,\n            loader: eventsLoader,\n          },\n          {\n            path: \":eid\",\n            loader: async ({ request, params }) => {\n              console.log(\"REQ is \", request);\n              console.log(\"Param is \", params);\n              const response = await fetch(\n                `http://localhost:8080/events/${params.eid}`\n              );\n\n              if (!response.ok) {\n                throw new Response(\n                  JSON.stringify({ message: \"Custom Response\" }),\n                  {\n                    status: 500,\n                  }\n                );\n              } else {\n                const resData = await response.json();\n\n                return resData.event;\n              }\n            },\n            children: [\n              {\n                path: \"\",\n                element: <EventDetailPage />,\n              },\n\n              { path: \"edit\", element: <EditEventPage /> },\n            ],\n          },\n          { path: \"new\", element: <NewEventPage /> },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}