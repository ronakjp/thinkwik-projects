{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const initialState = { users: [] };\n// export const userSlice = createSlice({\n//   name: \"users\",\n//   initialState,\n//   reducers: {\n//     addUsers: (state, action) => {\n//       const newUser = action.payload;\n//       return state.users.push(newUser);\n//     },\n//   },\n// });\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  users: []\n};\nexport default userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      state.users.push(action.payload);\n    }\n  }\n});\nexport const userActions = userSlice.actions;","map":{"version":3,"names":["createSlice","initialState","users","userSlice","name","reducers","addUser","state","action","push","payload","userActions","actions"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/cart-app-redux-practise/src/store/userSlice.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const initialState = { users: [] };\n// export const userSlice = createSlice({\n//   name: \"users\",\n//   initialState,\n//   reducers: {\n//     addUsers: (state, action) => {\n//       const newUser = action.payload;\n//       return state.users.push(newUser);\n//     },\n//   },\n// });\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  users: [],\n};\n\nexport default userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      state.users.push(action.payload);\n    },\n  },\n});\n\nexport const userActions = userSlice.actions;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,eAAeC,SAAS,GAAGH,WAAW,CAAC;EACrCI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}