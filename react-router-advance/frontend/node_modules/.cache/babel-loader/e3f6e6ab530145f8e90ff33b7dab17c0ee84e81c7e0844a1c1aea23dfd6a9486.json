{"ast":null,"code":"var _jsxFileName = \"/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/NewEventPage.jsx\";\nimport React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NewEventPage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = NewEventPage;\nexport async function handleOnSubmit({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const filledFormData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  console.log(\"filledFormData \", filledFormData);\n  const response = fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(filledFormData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not do it\"\n    });\n  }\n  return redirect();\n}\nexport default NewEventPage;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","redirect","jsxDEV","_jsxDEV","Fragment","_Fragment","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","handleOnSubmit","request","params","data","formData","filledFormData","title","get","image","date","description","console","log","response","fetch","method","headers","body","JSON","stringify","ok","message","$RefreshReg$"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/NewEventPage.jsx"],"sourcesContent":["import React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\n\nconst NewEventPage = () => {\n  return (\n    <>\n      <h1>NewEventPage</h1>\n      <EventForm />\n    </>\n  );\n};\n\nexport async function handleOnSubmit({ request, params }) {\n  const data = await request.formData();\n\n  const filledFormData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n  };\n\n  console.log(\"filledFormData \", filledFormData);\n\n  const response = fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(filledFormData),\n  });\n\n  if (!response.ok) {\n    throw json({message:\"Could not do it\"})\n  }\n\n  return redirect()\n}\n\nexport default NewEventPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBR,OAAA,CAACJ,SAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACb,CAAC;AAEP,CAAC;AAACC,EAAA,GAPIN,YAAY;AASlB,OAAO,eAAeO,cAAcA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACxD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,cAAc,GAAG;IACrBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAEDI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,cAAc,CAAC;EAE9C,MAAMQ,QAAQ,GAAGC,KAAK,CAAC,8BAA8B,EAAE;IACrDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,cAAc;EACrC,CAAC,CAAC;EAEF,IAAI,CAACQ,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMjC,IAAI,CAAC;MAACkC,OAAO,EAAC;IAAiB,CAAC,CAAC;EACzC;EAEA,OAAOjC,QAAQ,CAAC,CAAC;AACnB;AAEA,eAAeK,YAAY;AAAC,IAAAM,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}