{"ast":null,"code":"var _jsxFileName = \"/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, useRouteError } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  const error = useRouteError();\n  const title = \"\";\n  const message = \"\";\n  error.status;\n  if (error.status === 404) {\n    message = \"Not found the resource\";\n  }\n  if (error.status === 500) {\n    message = error.data.message;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"MkYKfL+BmDmC9gswzSgPx3agrGg=\", false, function () {\n  return [useLoaderData, useRouteError];\n});\n_c = EventsPage;\nexport async function eventsLoader() {\n  const response = await fetch(\"http://localhost:8080/eventss\");\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Custom Response\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","EventsList","useLoaderData","useRouteError","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","error","title","message","status","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","eventsLoader","response","fetch","ok","Response","JSON","stringify","resData","json","$RefreshReg$"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/EventsPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, useRouteError } from \"react-router-dom\";\n\nfunction EventsPage() {\n  const events = useLoaderData();\n  const error = useRouteError();\n  const title = \"\";\n  const message = \"\";\n  error.status;\n\n  if (error.status === 404) {\n    \n    message=\"Not found the resource\"\n  }\n  if (error.status === 500) {\n    message = error.data.message;\n  }\n\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport async function eventsLoader() {\n  const response = await fetch(\"http://localhost:8080/eventss\");\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"Custom Response\" }), {\n      status: 500,\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport default EventsPage;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhE,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGR,aAAa,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGR,aAAa,CAAC,CAAC;EAC7B,MAAMS,KAAK,GAAG,EAAE;EAChB,MAAMC,OAAO,GAAG,EAAE;EAClBF,KAAK,CAACG,MAAM;EAEZ,IAAIH,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;IAExBD,OAAO,GAAC,wBAAwB;EAClC;EACA,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;IACxBD,OAAO,GAAGF,KAAK,CAACI,IAAI,CAACF,OAAO;EAC9B;EAEA,oBACER,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA,CAACJ,UAAU;MAACS,MAAM,EAAEA;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACX,EAAA,CApBQD,UAAU;EAAA,QACFN,aAAa,EACdC,aAAa;AAAA;AAAAkB,EAAA,GAFpBb,UAAU;AAsBnB,OAAO,eAAec,YAAYA,CAAA,EAAG;EACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEf,OAAO,EAAE;IAAkB,CAAC,CAAC,EAAE;MACjEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMe,OAAO,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACnB,MAAM;EACvB;AACF;AAEA,eAAeF,UAAU;AAAC,IAAAa,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}