{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: []\n};\nconst cart = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.cartItems.push(action.payload);\n    },\n    removeItem(state, action) {\n      state.cartItems.filter(eachItem => eachItem.id === action.payload);\n    }\n  }\n});\ne;\nexport const cartActions = cart.actions;","map":{"version":3,"names":["createSlice","initialState","cartItems","cart","name","reducers","addItem","state","action","push","payload","removeItem","filter","eachItem","id","e","cartActions","actions"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/cart-app-redux-practise/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { cartItems: [] };\nconst cart = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.cartItems.push(action.payload);\n    },\n    removeItem(state, action) {\n      state.cartItems.filter((eachItem) => eachItem.id === action.payload);\n    },\n  },\n});\n\ne\nexport const cartActions = cart.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,SAAS,EAAE;AAAG,CAAC;AACtC,MAAMC,IAAI,GAAGH,WAAW,CAAC;EACvBI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrBD,KAAK,CAACL,SAAS,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACtC,CAAC;IACDC,UAAUA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACL,SAAS,CAACU,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC;IACtE;EACF;AACF,CAAC,CAAC;AAEFK,CAAC;AACD,OAAO,MAAMC,WAAW,GAAGb,IAAI,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}