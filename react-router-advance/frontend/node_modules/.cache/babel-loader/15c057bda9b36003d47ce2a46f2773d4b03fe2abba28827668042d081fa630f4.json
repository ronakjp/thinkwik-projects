{"ast":null,"code":"var _jsxFileName = \"/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLoaderData, useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    eid\n  } = useParams();\n  const d = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"EventDetailPage EId is \", eid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventItem, {\n      event: d\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"MJMSfO0XujU+xl0aGJzB5k0Rl2E=\", false, function () {\n  return [useParams, useLoaderData];\n});\n_c = EventDetailPage;\nexport async function eachEventLoader({\n  request,\n  params\n}) {\n  console.log(\"REQ is \", request);\n  console.log(\"Param is \", params);\n  const response = await fetch(`http://localhost:8080/events/${params.eid}`);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Custom Response\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nexport default EventDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useLoaderData","useParams","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","eid","d","children","fileName","_jsxFileName","lineNumber","columnNumber","event","_c","eachEventLoader","request","params","console","log","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","$RefreshReg$"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/EventDetailPage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLoaderData, useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nconst EventDetailPage = () => {\n  const { eid } = useParams();\n  const d = useLoaderData();\n  return (\n    <>\n      <h1>EventDetailPage EId is {eid}</h1>\n      <EventItem event={d} />\n    </>\n  );\n};\n\nexport async function eachEventLoader({ request, params }) {\n  console.log(\"REQ is \", request);\n  console.log(\"Param is \", params);\n  const response = await fetch(`http://localhost:8080/events/${params.eid}`);\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"Custom Response\" }), {\n      status: 500,\n    });\n  } else {\n    const resData = await response.json();\n\n    return resData.event;\n  }\n}\n\nexport default EventDetailPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,SAAS,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAChD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAI,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC3B,MAAMS,CAAC,GAAGV,aAAa,CAAC,CAAC;EACzB,oBACEI,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,GAAI,yBAAuB,EAACF,GAAG;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrCX,OAAA,CAACF,SAAS;MAACc,KAAK,EAAEN;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACvB,CAAC;AAEP,CAAC;AAACP,EAAA,CATID,eAAe;EAAA,QACHN,SAAS,EACfD,aAAa;AAAA;AAAAiB,EAAA,GAFnBV,eAAe;AAWrB,OAAO,eAAeW,eAAeA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACzDC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,OAAO,CAAC;EAC/BE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,MAAM,CAAC;EAChC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCJ,MAAM,CAACX,GAAG,EAAE,CAAC;EAE1E,IAAI,CAACc,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAkB,CAAC,CAAC,EAAE;MACjEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAErC,OAAOD,OAAO,CAACf,KAAK;EACtB;AACF;AAEA,eAAeT,eAAe;AAAC,IAAAU,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}