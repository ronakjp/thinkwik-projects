{"ast":null,"code":"var _jsxFileName = \"/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/Authentication.js\";\nimport AuthForm from \"../components/AuthForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  console.log(\"action called\");\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  console.log(mode);\n  if (mode !== \"login\" && mode !== \"signup\") {\n    console.log(\"inside not login not signiup\");\n    throw json({\n      mesaage: \"Unsupported mode\"\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  console.log(authData);\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  console.log(response);\n  if (response.status === 422 || response.status === 401) {\n    //for showing any user side validation errors\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not authenticate user\"\n    }, {\n      status: 500\n    });\n  }\n  const responseJson = await response.json();\n  const token = responseJson.token;\n  console.log(\"token is \", token);\n  return redirect(\"/\");\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","redirect","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","console","log","searchParams","URL","url","mode","get","mesaage","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","message","responseJson","token","$RefreshReg$"],"sources":["/Users/ronakpatel/Documents/Learning/Thinkwik_Projects/thinkwik-project/react-router-advance/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from \"../components/AuthForm\";\nimport { json, redirect } from \"react-router-dom\";\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  console.log(\"action called\");\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n\n  console.log(mode);\n\n  if (mode !== \"login\" && mode !== \"signup\") {\n    console.log(\"inside not login not signiup\");\n    throw json({ mesaage: \"Unsupported mode\" }, { status: 422 });\n  }\n\n  const data = await request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\"),\n  };\n\n  console.log(authData);\n\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(authData),\n  });\n\n  console.log(response);\n  if (response.status === 422 || response.status === 401) {\n    //for showing any user side validation errors\n    return response;\n  }\n\n  if (!response.ok) {\n    throw json({ message: \"Could not authenticate user\" }, { status: 500 });\n  }\n\n  const responseJson = await response.json();\n  const token = responseJson.token;\n\n  \n  console.log(\"token is \", token);\n\n  return redirect(\"/\");\n}\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClD,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACJ,QAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxCC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5B,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACJ,OAAO,CAACK,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhDN,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;EAEjB,IAAIA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzCL,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,MAAMb,IAAI,CAAC;MAAEmB,OAAO,EAAE;IAAmB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC9D;EAEA,MAAMC,IAAI,GAAG,MAAMV,OAAO,CAACW,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC/B,CAAC;EAEDN,OAAO,CAACC,GAAG,CAACU,QAAQ,CAAC;EAErB,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAC5DW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EAEFX,OAAO,CAACC,GAAG,CAACa,QAAQ,CAAC;EACrB,IAAIA,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAE;IACtD;IACA,OAAOM,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMjC,IAAI,CAAC;MAAEkC,OAAO,EAAE;IAA8B,CAAC,EAAE;MAAEd,MAAM,EAAE;IAAI,CAAC,CAAC;EACzE;EAEA,MAAMe,YAAY,GAAG,MAAMT,QAAQ,CAAC1B,IAAI,CAAC,CAAC;EAC1C,MAAMoC,KAAK,GAAGD,YAAY,CAACC,KAAK;EAGhCxB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEuB,KAAK,CAAC;EAE/B,OAAOnC,QAAQ,CAAC,GAAG,CAAC;AACtB;AAAC,IAAAQ,EAAA;AAAA4B,YAAA,CAAA5B,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}